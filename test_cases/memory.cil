/* CIL test file for memory management */

typedef struct node {
  int data;
  struct node* next;
} Node;

Node* create_node(int value) {
  Node* new_node = (Node*)malloc(sizeof(Node));
  new_node->data = value;
  new_node->next = NULL;
  return new_node;
}

void free_list(Node* head) {
  Node* current = head;
  Node* next_node;
  
  while (current != NULL) {
    next_node = current->next;
    free(current);
    current = next_node;
  }
}

void main() {
  Node* head = NULL;
  Node* temp;
  int i;
  
  /* Create a linked list */
  for (i = 0; i < 5; i++) {
    if (head == NULL) {
      head = create_node(i);
      temp = head;
    } else {
      temp->next = create_node(i);
      temp = temp->next;
    }
  }
  
  /* Print the list */
  temp = head;
  while (temp != NULL) {
    printf("Node value: %d\n", temp->data);
    temp = temp->next;
  }
  
  /* Free the memory */
  free_list(head);
} 